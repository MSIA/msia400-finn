Cp3 = 13.03
# Model 6.6
n6 = 402
p6 = 10
MSE6 <- 0.0015875
SSE6 <- 0.6274
# SSE for Model 6.3
SSE3 <- (Cp3 + n3 - 2*(p3 + 1)) * MSE6
SSE3
# Partial correlation significance tests Model 6.6
get_f <- function(partial_corr) {
return((partial_corr * sqrt(402-10-1)) / sqrt(1 - partial_corr ^ 2))
}
liter_f <- get_f(0.590)
saab_f <- get_f(0.785)
cadillac_f <- get_f(0.743)
mileage_f <- get_f(0.457)
convertible_f <- get_f(0.501)
wagon_f <- get_f(0.390)
chevrolet_f <- get_f(-0.244)
pontiac_f <- get_f(-0.155)
saturn_f <- get_f(-0.206)
cylinder_f <- get_f(-0.142)
print(paste('Liter',liter_f,'Saab',saab_f,'Cadillac',cadillac_f,'Mileage',mileage_f,'Convertible',convertible_f
,'Wagon',wagon_f,'Chevrolet',chevrolet_f,'Pontiac',pontiac_f,'Saturn',saturn_f,'Cylinder',cylinder_f))
qt(.025, 391)
sum((predict(lmfit, car_df_3_test) - log10(car_df_3_test$Price))^2)
sum((log10(car_df_6_test$Price) - predict(lmfit2, car_df_6_test))^2)
# sum(car_df_3_test$Price)
# Using both Pontiac and Saturn as reference for 6.3
car_df_3_train[car_df_3_train['Make'] == 'Saturn', 'Make'] <- 'Pontiac'
car_df_3_test[car_df_3_test['Make'] == 'Saturn', 'Make'] <- 'Pontiac'
car_df_3_train$Make <- relevel(car_df_3_train$Make, 'Pontiac')
car_df_3_test$Make <- relevel(car_df_3_test$Make, 'Pontiac')
car_df_3_train$Type <- relevel(car_df_3_train$Type, 'Wagon')
car_df_3_test$Type <- relevel(car_df_3_test$Type, 'Wagon')
lmfit <- lm(log10(Price) ~ Mileage + Cylinder + Liter + Cruise + Make + Type, car_df_3_train)
summary(lmfit)
# Using both Coupe, Hatchback, Sedan as reference, and drop Cruise for 6.6
car_df_6_train[car_df_6_train['Type'] == 'Hatchback', 'Type'] <- 'Coupe'
car_df_6_test[car_df_6_test['Type'] == 'Hatchback', 'Type'] <- 'Coupe'
car_df_6_train[car_df_6_train['Type'] == 'Sedan', 'Type'] <- 'Coupe'
car_df_6_test[car_df_6_test['Type'] == 'Sedan', 'Type'] <- 'Coupe'
car_df_6_train$Make <- relevel(car_df_6_train$Make, 'Buick')
car_df_6_test$Make <- relevel(car_df_6_train$Make, 'Buick')
car_df_6_train$Type <- relevel(car_df_6_train$Type, 'Coupe')
car_df_6_test$Type <- relevel(car_df_6_train$Type, 'Coupe')
lmfit2 <- lm(log10(Price) ~ Mileage + Liter + Cylinder + Make + Type, car_df_6_train)
summary(lmfit2)
sum((predict(lmfit, car_df_3_test) - log10(car_df_3_test$Price))^2)
sum((log10(car_df_6_test$Price) - predict(lmfit2, car_df_6_test))^2)
sum((predict(lmfit, car_df_3_test) - log10(car_df_3_test$Price))^2)
sum((log10(car_df_6_test$Price) - predict(lmfit2, car_df_6_test))^2)
# Using both Coupe, Hatchback, Sedan as reference, and drop Cruise for 6.6
car_df_6_train[car_df_6_train['Type'] == 'Hatchback', 'Type'] <- 'Coupe'
car_df_6_test[car_df_6_test['Type'] == 'Hatchback', 'Type'] <- 'Coupe'
car_df_6_train[car_df_6_train['Type'] == 'Sedan', 'Type'] <- 'Coupe'
car_df_6_test[car_df_6_test['Type'] == 'Sedan', 'Type'] <- 'Coupe'
car_df_6_train$Make <- relevel(car_df_6_train$Make, 'Buick')
car_df_6_test$Make <- relevel(car_df_6_test$Make, 'Buick')
car_df_6_train$Type <- relevel(car_df_6_train$Type, 'Coupe')
car_df_6_test$Type <- relevel(car_df_6_test$Type, 'Coupe')
lmfit2 <- lm(log10(Price) ~ Mileage + Liter + Cylinder + Make + Type, car_df_6_train)
summary(lmfit2)
sum((predict(lmfit, car_df_3_test) - log10(car_df_3_test$Price))^2)
sum((log10(car_df_6_test$Price) - predict(lmfit2, car_df_6_test))^2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/finn/MSIA/predictive_analytics")
library(tidyverse)
library(car)
x1 <- c(2.23,2.57,3.87,3.10,3.39,2.83,3.02,2.14,3.04,3.26,3.39,2.35,2.76,3.90,3.16)
x2 <- c(9.66,8.94,4.40,6.64,4.91,8.52,8.04,9.05,7.71,5.11,5.05,8.51,6.59,4.90,6.96)
y <- c(12.37,12.66,12.00,11.93,11.06,13.03,13.13,11.44,12.86,10.84,11.20,11.56,10.83,12.63,12.46)
df <- data_frame(x1,x2,y)
pairs(~x1 + x2 + y)
cor(df)
lmfit <- lm(y ~ x1 + x2)
summary(lmfit)
vars <- c('None','x1','x2','x3','x1,x2','x1,x3','x2,x3','x1,x2,x3')
sses <- c(950,720,630,540,595,425,510,400)
p <- c(0,1,1,1,2,2,2,3)
df <- rep(0,8)
mse <- rep(0,8)
r2 <- rep(0,8)
c <- rep(0,8)
aic <- rep(0,8)
sse_df <- data_frame(vars, sses, p, df, mse, r2, c, aic)
sse_df
sse_df$df <- 20 - (sse_df$p + 1)
sse_df$mse <- sse_df$sses / sse_df$df
sse_df$r2 <- 1 - (sse_df$sses / sse_df$df)/(950/(20-1))
sse_df$c <- sse_df$sses/25 + 2*(sse_df$p + 1) - 20
sse_df$aic <- 20 * log(sse_df$sses) + 2*(sse_df$p + 1) - 20*log(20)
sse_df
finx3 <- (950-540)/30
finx3
finx1x3 <- (540-425)/25
finx1x3
partial_correlation <- 1 - 425/540
partial_correlation
foutx1x3 <- (720 - 425)/25
foutx1x3
finx1x2x3 <- (425/400)/25
finx1x2x3
car_df <- read.csv('carprices.csv', stringsAsFactors = TRUE)
even_indexes <- seq(2,nrow(car_df),2)
odd_indexes <- seq(1,nrow(car_df),2)
car_df_3_test <- car_df[even_indexes,]
car_df_3_train <- car_df[odd_indexes,]
car_df_6_test <- car_df[even_indexes,]
car_df_6_train <- car_df[odd_indexes,]
dim(car_df_6_train)
# Using both Pontiac and Saturn as reference for 6.3
car_df_3_train[car_df_3_train['Make'] == 'Saturn', 'Make'] <- 'Pontiac'
car_df_3_test[car_df_3_test['Make'] == 'Saturn', 'Make'] <- 'Pontiac'
car_df_3_train$Make <- relevel(car_df_3_train$Make, 'Pontiac')
car_df_3_test$Make <- relevel(car_df_3_test$Make, 'Pontiac')
car_df_3_train$Type <- relevel(car_df_3_train$Type, 'Wagon')
car_df_3_test$Type <- relevel(car_df_3_test$Type, 'Wagon')
lmfit <- lm(log10(Price) ~ Mileage + Cylinder + Liter + Cruise + Make + Type, car_df_3_train)
summary(lmfit)
# Using both Coupe, Hatchback, Sedan as reference, and drop Cruise for 6.6
car_df_6_train[car_df_6_train['Type'] == 'Hatchback', 'Type'] <- 'Coupe'
car_df_6_test[car_df_6_test['Type'] == 'Hatchback', 'Type'] <- 'Coupe'
car_df_6_train[car_df_6_train['Type'] == 'Sedan', 'Type'] <- 'Coupe'
car_df_6_test[car_df_6_test['Type'] == 'Sedan', 'Type'] <- 'Coupe'
car_df_6_train$Make <- relevel(car_df_6_train$Make, 'Buick')
car_df_6_test$Make <- relevel(car_df_6_test$Make, 'Buick')
car_df_6_train$Type <- relevel(car_df_6_train$Type, 'Coupe')
car_df_6_test$Type <- relevel(car_df_6_test$Type, 'Coupe')
lmfit2 <- lm(log10(Price) ~ Mileage + Liter + Cylinder + Make + Type, car_df_6_train)
summary(lmfit2)
sum((predict(lmfit, car_df_3_test) - log10(car_df_3_test$Price))^2)
sum((log10(car_df_6_test$Price) - predict(lmfit2, car_df_6_test))^2)
# Constants
# Model 6.3
n3 = 402
p3 = 13
Cp3 = 13.03
# Model 6.6
n6 = 402
p6 = 10
MSE6 <- 0.0015875
SSE6 <- 0.6274
# SSE for Model 6.3
SSE3 <- (Cp3 + n3 - 2*(p3 + 1)) * MSE6
SSE3
# Partial correlation significance tests Model 6.6
get_f <- function(partial_corr) {
return((partial_corr * sqrt(402-10-1)) / sqrt(1 - partial_corr ^ 2))
}
liter_f <- get_f(0.590)
saab_f <- get_f(0.785)
cadillac_f <- get_f(0.743)
mileage_f <- get_f(0.457)
convertible_f <- get_f(0.501)
wagon_f <- get_f(0.390)
chevrolet_f <- get_f(-0.244)
pontiac_f <- get_f(-0.155)
saturn_f <- get_f(-0.206)
cylinder_f <- get_f(-0.142)
print(paste('Liter',liter_f,'Saab',saab_f,'Cadillac',cadillac_f,'Mileage',mileage_f,'Convertible',convertible_f
,'Wagon',wagon_f,'Chevrolet',chevrolet_f,'Pontiac',pontiac_f,'Saturn',saturn_f,'Cylinder',cylinder_f))
qt(.025, 391)
wine_df <- read.csv('redwine.txt')
wine_df <- read.csv('redwine.txt')
dim(wine_df)
head(wine_df)
wine_df <- read.table('redwine.txt', header = TRUE)
dim(wine_df)
head(wine_df)
mean(wine_df$RS, na.rm = TRUE)
mean(wine_df$SD, na.rm = TRUE)
SD.omit = na.omit(SD)
wine_df.omit = na.omit(wine_df)
dim(wine_Df)
dim(wine_df)
dim(wine_df.omit)
wine_df.omit <- na.omit(wine_df)
lmfit <- lm(wine_df.omit$SD ~ wine_df.omit$FS)
summary(lmfit)
wine_df$SD.isna()
complete.cases(wine_df$SD)
!complete.cases(wine_df$SD)
complete.cases(wine_df$SD)
complete.cases(wine_df$SD) == FALSE
complete.cases(wine_df$SD)
wine_df[complete.cases(wine_df$SD)]
subset(wine_df, wine_df[complete.cases(wine_df$SD) == FALSE)
subset(wine_df, wine_df[complete.cases(wine_df$SD) == FALSE))
subset(wine_df, complete.cases(wine_df$SD) == FALSE)
which(subset(wine_df, complete.cases(wine_df$SD) == FALSE))
subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$QA
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
index(missing_SD)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD.ind
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD
predict(lmfit, missing_SD$FS)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD
predict(lmfit, missing_SD$FS)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$FS
predict(lmfit, missing_SD$FS)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$FS
predict(lmfit, missing_SD)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$FS
predict(lmfit, 3)
wine_df.omit <- na.omit(wine_df)
lmfit <- lm(wine_df.omit$SD ~ wine_df.omit$FS)
summary(lmfit)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$FS
predict(3, lmfit)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$FS
predict(missing_SD$FS, lmfit)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$FS
predict(missing_SD$FS, lmfit)
# missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
# missing_SD$FS
# predict(missing_SD$FS, lmfit)
missing_SD <- is.na(wine_df$SD)
# missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
# missing_SD$FS
# predict(missing_SD$FS, lmfit)
missing_SD <- is.na(wine_df$SD)
missing_SD
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$FS
predict(missing_SD$FS, lmfit)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$FS
predict(lmfit, missing_SD$FS)
predict(lmfit,3)
wine_df.omit <- na.omit(wine_df)
lmfit <- lm(SD ~ FS, wine_df.omit$)
wine_df.omit <- na.omit(wine_df)
lmfit <- lm(SD ~ FS, wine_df.omit)
summary(lmfit)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$FS
predict(lmfit, missing_SD$FS)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$FS
missing_SD$SD <- predict(lmfit, missing_SD$FS)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$FS
missing_SD$SD <- predict(lmfit, missing_SD)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$SD <- predict(lmfit, missing_SD)
missing_SD
merge(wine_df, missing_SD, by.x=0, by.y=res)
as.numeric(rownames(missing_SD))
missing_SD_rows <- as.numeric(rownames(missing_SD))
wine_df[missing_SD_rows,] <- missing_SD
missing_SD_rows <- as.numeric(rownames(missing_SD))
wine_df[missing_SD_rows,] <- missing_SD
mean(wine_df$SD)
mean(wine_df$RS, na.rm = TRUE)
mean(wine_df$SD, na.rm = TRUE)
missing_SD_rows <- as.numeric(rownames(missing_SD))
wine_df[missing_SD_rows,] <- missing_SD
sum(is.na(wine_df$SD))
missing_SD_rows <- as.numeric(rownames(missing_SD))
wine_df[missing_SD_rows,] <- missing_SD
wine_df
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/finn/MSIA/msia400-finn")
wine_df <- read.table('redwine.txt', header = TRUE)
dim(wine_df)
head(wine_df)
mean(wine_df$RS, na.rm = TRUE)
mean(wine_df$SD, na.rm = TRUE)
wine_df.omit <- na.omit(wine_df)
lmfit <- lm(SD ~ FS, wine_df.omit)
summary(lmfit)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$SD <- predict(lmfit, missing_SD)
missing_SD
missing_SD_rows <- as.numeric(rownames(missing_SD))
wine_df_imputed_fit <- wine_df
wine_df_imputed_fit[missing_SD_rows,] <- missing_SD
wine_df_imputed_fit
avg.imp <- funnction(a,avg) {
missing_SD_rows <- as.numeric(rownames(missing_SD))
wine_df_imputed_fit <- wine_df
wine_df_imputed_fit[missing_SD_rows,] <- missing_SD
mean(wine_df_imputed_fit$SD)
avg.imp <- function(a,avg) {
missing <- is.na(a)
imputed <- a
imputed[missing] <- avg
return imputed
avg.imp <- function(a,avg) {
missing <- is.na(a)
imputed <- a
imputed[missing] <- avg
return (imputed)
}
avg.imp <- function(a,avg) {
missing <- is.na(a)
imputed <- a
imputed[missing] <- avg
return (imputed)
}
SD_imputed_mean <- avg.imp(wine_df$SD, mean(wine_df$SD))
avg.imp <- function(a,avg) {
missing <- is.na(a)
imputed <- a
imputed[missing] <- avg
return (imputed)
}
SD_imputed_mean <- avg.imp(wine_df$SD, mean(wine_df$SD))
SD_imputed_mean
avg.imp <- function(a,avg) {
missing <- is.na(a)
imputed <- a
imputed[missing] <- avg
return (imputed)
}
SD_imputed_mean <- avg.imp(wine_df$SD, mean(wine_df$SD, na.rm = TRUE))
SD_imputed_mean
avg.imp <- function(a,avg) {
missing <- is.na(a)
imputed <- a
imputed[missing] <- avg
return (imputed)
}
wine_df_imputed_mean <- wine_df
wine_df_imputed_mean$SD <- avg.imp(wine_df$SD, mean(wine_df$SD, na.rm = TRUE))
mean(wine_df_imputed_mean)
avg.imp <- function(a,avg) {
missing <- is.na(a)
imputed <- a
imputed[missing] <- avg
return (imputed)
}
wine_df_imputed_mean <- wine_df
wine_df_imputed_mean$SD <- avg.imp(wine_df$SD, mean(wine_df$SD, na.rm = TRUE))
mean(wine_df_imputed_mean$SD)
missing_SD_rows <- as.numeric(rownames(missing_SD))
wine_df_imputed <- wine_df
wine_df_imputed[missing_SD_rows,] <- missing_SD
mean(wine_df_imputed$SD)
avg.imp <- function(a,avg) {
missing <- is.na(a)
imputed <- a
imputed[missing] <- avg
return (imputed)
}
wine_df_imputed$RS <- avg.imp(wine_df$RS, mean(wine_df$RS, na.rm = TRUE))
mean(wine_df_imputed_mean$RS)
avg.imp <- function(a,avg) {
missing <- is.na(a)
imputed <- a
imputed[missing] <- avg
return (imputed)
}
wine_df_imputed$RS <- avg.imp(wine_df$RS, mean(wine_df$RS, na.rm = TRUE))
mean(wine_df_imputed$RS)
winemodel <- lmfit(QA ~ FA + VA + CA + RS + CH + FS + SD + DE + PH + SU + AL, wine_df_imputed)
winemodel <- lm(QA ~ FA + VA + CA + RS + CH + FS + SD + DE + PH + SU + AL, wine_df_imputed)
winemodel <- lm(QA ~ FA + VA + CA + RS + CH + FS + SD + DE + PH + SU + AL, wine_df_imputed)]
winemodel <- lm(QA ~ FA + VA + CA + RS + CH + FS + SD + DE + PH + SU + AL, wine_df_imputed)
summary(winemodel)
require(caret)
install.packages(caret)
install.packages('caret')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/finn/MSIA/msia400-finn")
wine_df <- read.table('redwine.txt', header = TRUE)
dim(wine_df)
head(wine_df)
mean(wine_df$RS, na.rm = TRUE)
mean(wine_df$SD, na.rm = TRUE)
wine_df.omit <- na.omit(wine_df)
lmfit <- lm(SD ~ FS, wine_df.omit)
summary(lmfit)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$SD <- predict(lmfit, missing_SD)
missing_SD
missing_SD_rows <- as.numeric(rownames(missing_SD))
wine_df_imputed <- wine_df
wine_df_imputed[missing_SD_rows,] <- missing_SD
mean(wine_df_imputed$SD)
avg.imp <- function(a,avg) {
missing <- is.na(a)
imputed <- a
imputed[missing] <- avg
return (imputed)
}
wine_df_imputed$RS <- avg.imp(wine_df$RS, mean(wine_df$RS, na.rm = TRUE))
mean(wine_df_imputed$RS)
winemodel <- lm(QA ~ FA + VA + CA + RS + CH + FS + SD + DE + PH + SU + AL, wine_df_imputed)
summary(winemodel)
install.packages('caret')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/finn/MSIA/msia400-finn")
wine_df <- read.table('redwine.txt', header = TRUE)
dim(wine_df)
head(wine_df)
mean(wine_df$RS, na.rm = TRUE)
mean(wine_df$SD, na.rm = TRUE)
wine_df.omit <- na.omit(wine_df)
lmfit <- lm(SD ~ FS, wine_df.omit)
summary(lmfit)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$SD <- predict(lmfit, missing_SD)
missing_SD
missing_SD_rows <- as.numeric(rownames(missing_SD))
wine_df_imputed <- wine_df
wine_df_imputed[missing_SD_rows,] <- missing_SD
mean(wine_df_imputed$SD)
avg.imp <- function(a,avg) {
missing <- is.na(a)
imputed <- a
imputed[missing] <- avg
return (imputed)
}
wine_df_imputed$RS <- avg.imp(wine_df$RS, mean(wine_df$RS, na.rm = TRUE))
mean(wine_df_imputed$RS)
winemodel <- lm(QA ~ FA + VA + CA + RS + CH + FS + SD + DE + PH + SU + AL, wine_df_imputed)
summary(winemodel)
cv.lm(wine_df_imputed, winemodel, m=5)
library(MASS)
cv.lm(wine_df_imputed, winemodel, m=5)
cv.lm(winemodel, m=5)
library(MASS)
cv.lm(winemodel, m=5)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/finn/MSIA/msia400-finn")
wine_df <- read.table('redwine.txt', header = TRUE)
dim(wine_df)
head(wine_df)
mean(wine_df$RS, na.rm = TRUE)
mean(wine_df$SD, na.rm = TRUE)
wine_df.omit <- na.omit(wine_df)
lmfit <- lm(SD ~ FS, wine_df.omit)
summary(lmfit)
missing_SD <- subset(wine_df, complete.cases(wine_df$SD) == FALSE)
missing_SD$SD <- predict(lmfit, missing_SD)
missing_SD
missing_SD_rows <- as.numeric(rownames(missing_SD))
wine_df_imputed <- wine_df
wine_df_imputed[missing_SD_rows,] <- missing_SD
mean(wine_df_imputed$SD)
avg.imp <- function(a,avg) {
missing <- is.na(a)
imputed <- a
imputed[missing] <- avg
return (imputed)
}
wine_df_imputed$RS <- avg.imp(wine_df$RS, mean(wine_df$RS, na.rm = TRUE))
mean(wine_df_imputed$RS)
winemodel <- lm(QA ~ FA + VA + CA + RS + CH + FS + SD + DE + PH + SU + AL, wine_df_imputed)
summary(winemodel)
library(MASS)
cv.lm(winemodel, m=5)
library(DAAG)
install.packages(DAAG)
install.packages('DAAG')
library('DAAG')
cv.lm(winemodel, m=5)
cv.lm(wine_df_imputed, winemodel, m=5)
mean(wine_df_imputed$PH)
sd(wine_df_imputed$PH)
ph_mean <- mean(wine_df_imputed$PH)
ph_sd <- sd(wine_df_imputed$PH)
ph_lower_bound <- ph_mean - 3 * ph_sd
ph_upper_bound <- ph_mean + 3 * ph_sd
redwine2 <- wine_df_imputed[with(wine_df_imputed, (PH > ph_lower_bound | PH < ph_upper_bound))]
wine_df_imputed[with(wine_df_imputed, (PH > ph_lower_bound | PH < ph_upper_bound))]
wine_df_imputed[with(wine_df_imputed, (PH > ph_lower_bound | PH < ph_upper_bound))]
wine_df_imputed[with(wine_df_imputed, (PH > ph_lower_bound | PH < ph_upper_bound)),]
wine_df_imputed[with(wine_df_imputed, !(PH > ph_lower_bound | PH < ph_upper_bound)),]
wine_df_imputed[with(wine_df_imputed, !(PH < ph_lower_bound | PH > ph_upper_bound)),]
redwine2 <- wine_df_imputed[with(wine_df_imputed, !(PH < ph_lower_bound | PH > ph_upper_bound)),]
redwine2 <- wine_df_imputed[with(wine_df_imputed, !(PH < ph_lower_bound | PH > ph_upper_bound)),]
dim(redwine2)
winemodel <- lm(QA ~ FA + VA + CA + RS + CH + FS + SD + DE + PH + SU + AL, redwine2)
summary(winemodel)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/finn/MSIA/msia400-finn")
options(warn=-1)
gas_df <- read.csv('gas_mileage.csv')
gas_df
library(quantreg)
fit <- rq(Mpg~.,data=gas_df,tau=seq(0.05,0.95,0.05))
plot(fit, mfrow=c(2,4))
fit_med <- rq(Mpg~.,data=gas_df,tau=0.5)
summary(fit_med, se="boot")
car_df <- read.csv('car.csv')
dim(car_df)
library(e1071)
svm_car = svm(factor(y)~income+car_age, data = car_df)
summary(svm_car)
plot(svm_car, car_df, income~car_age)
car_df <- rbind(car_df, c(0, 50, 5))
predict(svm_car, car_df)[34]
fit <- rq(Mpg~.,data=gas_df,tau=seq(0.05,0.95,0.05))
summary(fit)
fit <- rq(Mpg~.,data=gas_df,tau=seq(0.05,0.95,0.05))
